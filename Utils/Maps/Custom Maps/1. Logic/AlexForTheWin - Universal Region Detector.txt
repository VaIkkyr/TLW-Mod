OnRoundStart()
{
  //Spawn clock titans
  Titan.SpawnTitanAt(0, 0.1, 0, 1, 0.0, 105.0, 100.0);
  Titan.SpawnTitanAt(0, 0.1, 0, 1, 0.0, 95.0, 100.0);
  
  //Set coordinates of the cube that will trigger when a player is near
  VariableFloat.Set("TriggerX", 0.0);
  VariableFloat.Set("TriggerY", 25.0);
  VariableFloat.Set("TriggerZ", 50.0);
  
  //Set size of the cube (size of each side)
  VariableFloat.Set("Size", 25.0);
  
  //Set the boolean judging if the player is in the box or not
  VariableBool.Set("InBox", false);
}


OnTitanEnterRegion["Clock1"]("ClockTitan")
{
  //Tick
  Titan.MoveTitan(VariableTitan("ClockTitan"), 0.0, 95.0, 100.0);
}

OnTitanEnterRegion["Clock2"]("ClockTitan")
{
  //Tock
  Titan.MoveTitan(VariableTitan("ClockTitan"), 0.0, 105.0, 100.0);
  
  //Set temporary player object for the loop
  VariablePlayer.Set("player", VariablePlayer("NULL"))
  
  //Check if each player is near the sphere
  ForeachPlayer("player")
  {
    //Store the player's position values to compare
    VariableFloat.Set("PosX", VariablePlayer("player").GetPositionX());
    VariableFloat.Set("PosY", VariablePlayer("player").GetPositionY());
    VariableFloat.Set("PosZ", VariablePlayer("player").GetPositionZ());
    
    //Check if the player is inside of the box
    
    //Check if the player's X coordinate withinn the box
    
    //Set a temporary value to hold the difference between the player and the box positions
    VariableFloat.Set("Temp", VariableFloat("TriggerX"));
    VariableFloat.Subtract("Temp", VariableFloat("PosX"));
    
    //Get the absolute value of X
    If(Float.LessThan(VariableFloat("Temp"), 0.0))
    {
      VariableFloat.Multiply("Temp", -1.0)
    }
    
    //Check if the distance between the player and the box is withinn the set size
    If(Float.LessThanOrEqual(VariableFloat("Temp"), VariableFloat("Size")))
    {
       //Repeat the same step for Y coordinate
       
       //Set a temporary value to hold the difference between the player and the box positions
       VariableFloat.Set("Temp", VariableFloat("TriggerY"));
       VariableFloat.Subtract("Temp", VariableFloat("PosY"));
       
       //Get the absolute value of Y
       If(Float.LessThan(VariableFloat("Temp"), 0.0))
       {
         VariableFloat.Multiply("Temp", -1.0)
       }
       
       //Check if the distance between the player and the box is withinn the set size
       If(Float.LessThanOrEqual(VariableFloat("Temp"), VariableFloat("Size")))
       {
          //Repeat the same step for Z coordinate
          
          //Set a temporary value to hold the difference between the player and the box positions
          VariableFloat.Set("Temp", VariableFloat("TriggerZ"));
          VariableFloat.Subtract("Temp", VariableFloat("PosZ"));
          
          //Get the absolute value of Y
          If(Float.LessThan(VariableFloat("Temp"), 0.0))
          {
            VariableFloat.Multiply("Temp", -1.0)
          }
          
          //Check if the distance between the player and the box is withinn the set size
          If(Float.LessThanOrEqual(VariableFloat("Temp"), VariableFloat("Size")))
          {
             //At this point, we know the player is in the box. Execute whatever you want
             
             Game.PrintMessage("GET OUT OF MY BOX");
          }
       }
    }
  }
}